import { JsonSchemaType } from "../../../../../../../../../schema";

export const StripeObjectSchema = {
  object: {
    type: JsonSchemaType.OBJECT,
    additionalProperties: false,
    required: ["id"],
    properties: {
      id: {
        type: JsonSchemaType.STRING,
      },
      status: {
        type: [JsonSchemaType.STRING, JsonSchemaType.NULL],
      },
      reason: {
        type: [JsonSchemaType.STRING, JsonSchemaType.NULL],
      },
      receipt_number: {
        type: [JsonSchemaType.STRING, JsonSchemaType.NULL],
      },
    },
  },
};

export interface StripeObjectInterface {
  object: StripeObject;
}

/**
 * This object is a sub-set of the `Stripe.Refunds` object.
 */
interface StripeObject {
  /**
   * Unique identifier for the object.
   */
  id: string;

  /**
   * Reason for the refund, either user-provided (`duplicate`, `fraudulent`, or `requested_by_customer`) or generated by Stripe internally (`expired_uncaptured_charge`).
   */
  reason?: string | null;

  /**
   * This is the transaction number that appears on email receipts sent for this refund.
   */
  receipt_number?: string | null;

  /**
   * Status of the refund. For credit card refunds, this can be `pending`, `succeeded`, or `failed`. For other types of refunds, it can be `pending`, `succeeded`, `failed`, or `canceled`. Refer to our [refunds](https://stripe.com/docs/refunds#failed-refunds) documentation for more details.
   */
  status?: string | null;
}
